{"version":3,"sources":["webpack:///js/project.js","webpack:///webpack/bootstrap 3539e8ca274fb9be5f52","webpack:///./source/js/project.js","webpack:///./source/js/partials/sliders.js","webpack:///./node_modules/swiper/dist/js/swiper.js","webpack:///./source/js/partials/mobile_menu.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","_swiper","_swiper2","Swiper","navigation","nextEl","prevEl","global","factory","$","selector","context","arr","Dom7","els","tempParent","html","trim","indexOf","toCreate","doc","createElement","innerHTML","childNodes","length","push","match","querySelectorAll","getElementById","split","nodeType","win","unique","uniqueArray","addClass","className","this$1","this","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","setAttribute","attrName","getAttribute","removeAttr","removeAttribute","data","el","dom7ElementDataStorage","dataKey","transform","elStyle","style","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","targetSelector","listener","apply","parents","k","handleEvent","assign","args","len","eventType","capture","events","event$1","dom7LiveListeners","proxyListener","addEventListener","event","dom7Listeners","off","handlers","handler","removeEventListener","splice","trigger","evt","CustomEvent","detail","bubbles","cancelable","createEvent","initEvent","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","dom","outerWidth","includeMargins","styles","offsetWidth","parseFloat","getPropertyValue","outerHeight","offsetHeight","offset","box","getBoundingClientRect","body","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","getComputedStyle","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","children","removeChild","toAdd","updateSize","width","height","swiper","$el","params","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","Utils","extend","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","replace","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","y","slidesPerGroup","newSlidesGrid","effect","Support","flexbox","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","activeSlide","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","snapIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","axis","virtualTranslate","currentTranslate","setTranslate","byController","x","transforms3d","previousTranslate","newProgress","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","map","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","nextTick","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged$1","loopDestroy","setGrabCursor","moving","touch","simulateTouch","isLocked","cursor","unsetGrabCursor","appendSlide","observer","update","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","screen","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","now","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","activeElement","blur","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","pow","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","grabCursor","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","clearTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","bind","touchEventsTarget","pointerEvents","prefixedPointerEvents","passiveListener","start","passiveListeners","passive","move","end","Device","ios","android","detachEvents","keys","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","forEach","point","sort","a","b","innerWidth","addClasses","classNames","suffixes","Browser","isIE","suffix","containerModifierClass","join","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","image","complete","Image","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","wasLocked","isEventSupported","isSupported","element","onwheel","implementation","hasFeature","document","nodeName","querySelector","getElementsByTagName","location","hash","window","navigator","userAgent","history","Date","setTimeout","self","fn","Class","Methods","methodName","deleteProps","delay","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","testDiv","Modernizr","DocumentTouch","pointerEnabled","PointerEvent","msPointerEnabled","csstransforms3d","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","staticAccessors","components","priority","method","onceHandler","eventHandler","Array","isArray","slice","useModulesParams","instanceParams","instance","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","set","use","installModule","proto","static","install","concat","defineProperties","transition$1","manipulation","ua","device","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","isSafari","isUiWebView","test","images","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","extendedDefaults","SwiperClass$$1","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","__proto__","spv","breakLoop","translateValue","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","disconnect","Observer$1","Virtual","force","onRendered","lazy","load","ref","ref$1","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","Navigation$1","hideOnClick","hiddenClass","toEdge","fromEdge","click","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","clientX","clientY","positionRatio","t","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Scrollbar$1","Parallax","setTransform","currentOpacity","currentScale","parallax","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","zoomedSlideClass","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Zoom$1","touchStart","touchEnd","doubleTap","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","scroll","scrollbarDragMove","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","getInterpolateFunction","controller","spline","setTranslate$1","setControlledTranslate","by","controlledTranslate","multiplier","inverse","controlled","control","setControlledTransition","Controller$1","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","A11y","notificationClass","paginationUpdate","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","slideHistory","History$1","HashNavigation","onHashCange","newHash","setHash","slideHash","watchState","HashNavigation$1","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","Autoplay$1","disableOnInteraction","beforeTransitionStart","sliderFirstMove","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","EffectCoverflow","mobileBtn","mobileMenu","menuActive","onKeyDown","closeMenu","onBodyClick","targetHref","showMenu","onclick"],"mappings":"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","file":"./js/project.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(1);\n\nvar _sliders = __webpack_require__(2);\n\nvar sliders = _interopRequireWildcard(_sliders);\n\nvar _mobile_menu = __webpack_require__(4);\n\nvar mobile_menu = _interopRequireWildcard(_mobile_menu);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _swiper = __webpack_require__(3);\n\nvar _swiper2 = _interopRequireDefault(_swiper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar firstSlider = new _swiper2.default('.first-slider', {\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev'\n  }\n});\n\nvar secondSlider = new _swiper2.default('.second-slider', {});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.0.7\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: June 14, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    var this$1 = this;\n\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this$1[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this$1[i][attrName] = attrs[attrName];\n          this$1[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var this$1 = this;\n\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this$1[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    var this$1 = this;\n\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this$1[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var this$1 = this;\n\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this$1[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this$1[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    var this$1 = this;\n\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this$1[i], i, this$1[i]) === false) {\n        // End the loop early\n        return this$1;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    var this$1 = this;\n\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    var this$1 = this;\n\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this$1[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this$1[i].appendChild(newChild[j]);\n          }\n        } else {\n          this$1[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var this$1 = this;\n\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);\n        }\n      } else {\n        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode !== null) {\n        if (selector) {\n          if ($(this$1[i].parentNode).is(selector)) { parents.push(this$1[i].parentNode); }\n        } else {\n          parents.push(this$1[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this$1[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var this$1 = this;\n\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this$1[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var this$1 = this;\n\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this$1[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode) { this$1[i].parentNode.removeChild(this$1[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n      if (preventDefault && swiper.allowTouchMove) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n      var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakPointsParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakPointsParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = (function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object') { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: false });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.virtual;\n      var previousFrom = ref$1.from;\n      var previousTo = ref$1.to;\n      var slides = ref$1.slides;\n      var previousSlidesGrid = ref$1.slidesGrid;\n      var renderSlide = ref$1.renderSlide;\n      var previousOffset = ref$1.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1);\n        slidesBefore = slidesPerGroup;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return a < b; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        swiper.virtual.update();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isEnd && !swiper.params.loop) { return; }\n          swiper.slideNext();\n        });\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isBeginning && !swiper.params.loop) { return; }\n          swiper.slidePrev();\n        });\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click');\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click');\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        swiper.zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        swiper.slideTo(swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index());\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar mobileBtn = document.querySelector('.js-mobile-menu');\nvar mobileMenu = document.querySelector('.js-navigation');\n\nif (!!mobileBtn && !!mobileMenu) {\n    var menuActive = true;\n\n    var onKeyDown = function onKeyDown(evt) {\n        evt = evt || window.event;\n        if (evt.keyCode == 27) {\n            closeMenu();\n        }\n    };\n\n    var onBodyClick = function onBodyClick(evt) {\n        evt = evt || window.event;\n        var targetHref = evt.target.getAttribute('href');\n        if (evt.target.classList.contains('menu__link') || /^#/.test(targetHref)) {\n            closeMenu();\n        }\n    };\n\n    var showMenu = function showMenu() {\n        mobileBtn.querySelector('.menu-btn').classList.add('open');\n        mobileMenu.classList.add('open');\n        document.body.classList.add('mobile-menu-opened');\n        document.addEventListener('keydown', onKeyDown);\n        document.addEventListener('click', onBodyClick);\n        menuActive = false;\n    };\n    var closeMenu = function closeMenu() {\n        mobileBtn.querySelector('.menu-btn').classList.remove('open');\n        mobileMenu.classList.remove('open');\n        document.body.classList.remove('mobile-menu-opened');\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('click', onBodyClick);\n        menuActive = true;\n    };\n\n    mobileBtn.onclick = function () {\n        console.log('123');\n        if (menuActive) {\n            showMenu();\n        } else {\n            closeMenu();\n        }\n    };\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/project.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3539e8ca274fb9be5f52","import \"../css/project.sass\";\n\nimport * as sliders from './partials/sliders.js';\nimport * as mobile_menu from './partials/mobile_menu.js';\n\n\n// WEBPACK FOOTER //\n// ./source/js/project.js","import Swiper from 'swiper/dist/js/swiper.js';\nlet firstSlider = new Swiper('.first-slider', {\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n});\n\nlet secondSlider = new Swiper('.second-slider', {});\n\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/partials/sliders.js","/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.0.7\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: June 14, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    var this$1 = this;\n\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this$1[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this$1[i][attrName] = attrs[attrName];\n          this$1[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var this$1 = this;\n\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this$1[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    var this$1 = this;\n\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this$1[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var this$1 = this;\n\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this$1[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this$1[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    var this$1 = this;\n\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this$1[i], i, this$1[i]) === false) {\n        // End the loop early\n        return this$1;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    var this$1 = this;\n\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    var this$1 = this;\n\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this$1[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this$1[i].appendChild(newChild[j]);\n          }\n        } else {\n          this$1[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var this$1 = this;\n\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);\n        }\n      } else {\n        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode !== null) {\n        if (selector) {\n          if ($(this$1[i].parentNode).is(selector)) { parents.push(this$1[i].parentNode); }\n        } else {\n          parents.push(this$1[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this$1[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var this$1 = this;\n\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this$1[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var this$1 = this;\n\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this$1[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode) { this$1[i].parentNode.removeChild(this$1[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n      if (preventDefault && swiper.allowTouchMove) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n      var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakPointsParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakPointsParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = (function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object') { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: false });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.virtual;\n      var previousFrom = ref$1.from;\n      var previousTo = ref$1.to;\n      var slides = ref$1.slides;\n      var previousSlidesGrid = ref$1.slidesGrid;\n      var renderSlide = ref$1.renderSlide;\n      var previousOffset = ref$1.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1);\n        slidesBefore = slidesPerGroup;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return a < b; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        swiper.virtual.update();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isEnd && !swiper.params.loop) { return; }\n          swiper.slideNext();\n        });\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isBeginning && !swiper.params.loop) { return; }\n          swiper.slidePrev();\n        });\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click');\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click');\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        swiper.zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        swiper.slideTo(swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index());\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.js\n// module id = 3\n// module chunks = 0","const mobileBtn = document.querySelector('.js-mobile-menu');\nconst mobileMenu = document.querySelector('.js-navigation');\n\nif (!!mobileBtn && !!mobileMenu) {\n    let menuActive = true;\n\n    let onKeyDown = function (evt) {\n        evt = evt || window.event;\n        if (evt.keyCode == 27) {\n            closeMenu();\n        }\n    };\n    \n    let onBodyClick = function (evt) {\n        evt = evt || window.event;\n        let targetHref = evt.target.getAttribute('href');\n        if (evt.target.classList.contains('menu__link') || /^#/.test(targetHref)) {\n            closeMenu();\n        }\n    };\n    \n    let showMenu = function () {\n        mobileBtn.querySelector('.menu-btn').classList.add('open');\n        mobileMenu.classList.add('open');\n        document.body.classList.add('mobile-menu-opened');\n        document.addEventListener('keydown', onKeyDown);\n        document.addEventListener('click', onBodyClick);\n        menuActive = false;\n    }\n    let closeMenu = function () {\n        mobileBtn.querySelector('.menu-btn').classList.remove('open');\n        mobileMenu.classList.remove('open');\n        document.body.classList.remove('mobile-menu-opened');\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('click', onBodyClick);\n        menuActive = true;\n    }\n    \n    mobileBtn.onclick = function () {\n        console.log('123');\n        if (menuActive) {\n            showMenu();\n        } else {\n            closeMenu();\n        }\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./source/js/partials/mobile_menu.js"],"sourceRoot":""}