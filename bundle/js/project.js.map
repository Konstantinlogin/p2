{"version":3,"sources":["webpack:///js/project.js","webpack:///webpack/bootstrap 42b113fe4b7edab874b7","webpack:///./source/js/project.js","webpack:///./source/js/partials/sliders.js","webpack:///./node_modules/swiper/dist/js/swiper.js","webpack:///./source/js/partials/mobile_menu.js","webpack:///./source/js/partials/smoothScroll.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","_swiper","_swiper2","Swiper","init","navigation","nextEl","prevEl","pagination","el","clickable","slidesPerView","breakpoints","767","global","factory","$","selector","context","arr","Dom7","els","tempParent","html","trim","indexOf","toCreate","doc","createElement","innerHTML","childNodes","length","push","match","querySelectorAll","getElementById","split","nodeType","win","unique","uniqueArray","addClass","className","this$1","this","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","setAttribute","attrName","getAttribute","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","transform","elStyle","style","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","targetSelector","listener","apply","parents","k","handleEvent","assign","args","len","eventType","capture","events","event$1","dom7LiveListeners","proxyListener","addEventListener","event","dom7Listeners","off","handlers","handler","removeEventListener","splice","trigger","evt","CustomEvent","detail","bubbles","cancelable","createEvent","initEvent","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","dom","outerWidth","includeMargins","styles","offsetWidth","parseFloat","getPropertyValue","outerHeight","offsetHeight","offset","box","getBoundingClientRect","body","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","getComputedStyle","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","children","removeChild","toAdd","updateSize","width","height","swiper","$el","params","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","Utils","extend","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","replace","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","y","slidesPerGroup","newSlidesGrid","effect","Support","flexbox","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","activeSlide","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","snapIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","axis","virtualTranslate","currentTranslate","setTranslate","byController","x","transforms3d","previousTranslate","newProgress","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","map","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","nextTick","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged$1","loopDestroy","setGrabCursor","moving","touch","simulateTouch","isLocked","cursor","unsetGrabCursor","appendSlide","observer","update","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","screen","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","now","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","activeElement","blur","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","pow","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","grabCursor","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","clearTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","bind","touchEventsTarget","pointerEvents","prefixedPointerEvents","passiveListener","start","passiveListeners","passive","move","end","Device","ios","android","detachEvents","keys","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","forEach","point","sort","a","b","innerWidth","addClasses","classNames","suffixes","Browser","isIE","suffix","containerModifierClass","join","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","image","complete","Image","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","wasLocked","isEventSupported","isSupported","element","onwheel","implementation","hasFeature","document","nodeName","querySelector","getElementsByTagName","location","hash","window","navigator","userAgent","history","Date","setTimeout","self","fn","Class","Methods","methodName","deleteProps","delay","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","testDiv","Modernizr","DocumentTouch","pointerEnabled","PointerEvent","msPointerEnabled","csstransforms3d","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","staticAccessors","components","priority","method","onceHandler","eventHandler","Array","isArray","slice","useModulesParams","instanceParams","instance","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","set","use","installModule","proto","static","install","concat","defineProperties","transition$1","manipulation","ua","device","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","isSafari","isUiWebView","test","images","checkOverflow$1","defaults","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","extendedDefaults","SwiperClass$$1","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","__proto__","spv","breakLoop","translateValue","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","disconnect","Observer$1","Virtual","force","onRendered","lazy","load","ref","ref$1","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","Navigation$1","hideOnClick","hiddenClass","toEdge","fromEdge","click","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","clientX","clientY","positionRatio","t","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Scrollbar$1","Parallax","setTransform","currentOpacity","currentScale","parallax","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","zoomedSlideClass","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Zoom$1","touchStart","touchEnd","doubleTap","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","scroll","scrollbarDragMove","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","getInterpolateFunction","controller","spline","setTranslate$1","setControlledTranslate","by","controlledTranslate","multiplier","inverse","controlled","control","setControlledTransition","Controller$1","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","A11y","notificationClass","paginationUpdate","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","slideHistory","History$1","HashNavigation","onHashCange","newHash","setHash","slideHash","watchState","HashNavigation$1","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","Autoplay$1","disableOnInteraction","beforeTransitionStart","sliderFirstMove","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","EffectCoverflow","mobileBtn","mobileMenu","menuActive","onKeyDown","closeMenu","onBodyClick","targetHref","showMenu","onclick","elem","substring","behavior"],"mappings":"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","file":"./js/project.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(1);\n\nvar _sliders = __webpack_require__(2);\n\nvar sliders = _interopRequireWildcard(_sliders);\n\nvar _mobile_menu = __webpack_require__(4);\n\nvar mobile_menu = _interopRequireWildcard(_mobile_menu);\n\nvar _smoothScroll = __webpack_require__(5);\n\nvar smoothScroll = _interopRequireWildcard(_smoothScroll);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _swiper = __webpack_require__(3);\n\nvar _swiper2 = _interopRequireDefault(_swiper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar firstSlider = new _swiper2.default('.first-slider', {\n  init: false,\n  navigation: {\n    nextEl: '.first-slider__next',\n    prevEl: '.first-slider__prev'\n  }\n});\n\nvar secondSlider = new _swiper2.default('.second-slider', {\n  pagination: {\n    el: '.second-slider-wrapper__pagination',\n    clickable: true\n  },\n  navigation: {\n    nextEl: '.first-section__arr-right',\n    prevEl: '.first-section__arr-left'\n  }\n});\n\nvar clientsSlider = new _swiper2.default('.clients-slider', {\n  pagination: {\n    el: '.section-clients__slider-pagination',\n    clickable: true\n  },\n  slidesPerView: 3,\n  breakpoints: {\n    767: {\n      slidesPerView: 1\n    }\n  }\n});\n\nvar worksSlider = new _swiper2.default('.works-slider', {\n  pagination: {\n    el: '.section-how-it-works__pagination',\n    clickable: true\n  },\n  navigation: {\n    nextEl: '.works-slider-wrapper__next',\n    prevEl: '.works-slider-wrapper__prev'\n  }\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.0.7\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: June 14, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    var this$1 = this;\n\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this$1[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this$1[i][attrName] = attrs[attrName];\n          this$1[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var this$1 = this;\n\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this$1[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    var this$1 = this;\n\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this$1[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var this$1 = this;\n\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this$1[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this$1[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    var this$1 = this;\n\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this$1[i], i, this$1[i]) === false) {\n        // End the loop early\n        return this$1;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    var this$1 = this;\n\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    var this$1 = this;\n\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this$1[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this$1[i].appendChild(newChild[j]);\n          }\n        } else {\n          this$1[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var this$1 = this;\n\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);\n        }\n      } else {\n        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode !== null) {\n        if (selector) {\n          if ($(this$1[i].parentNode).is(selector)) { parents.push(this$1[i].parentNode); }\n        } else {\n          parents.push(this$1[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this$1[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var this$1 = this;\n\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this$1[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var this$1 = this;\n\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this$1[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode) { this$1[i].parentNode.removeChild(this$1[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n      if (preventDefault && swiper.allowTouchMove) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n      var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakPointsParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakPointsParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = (function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object') { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: false });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.virtual;\n      var previousFrom = ref$1.from;\n      var previousTo = ref$1.to;\n      var slides = ref$1.slides;\n      var previousSlidesGrid = ref$1.slidesGrid;\n      var renderSlide = ref$1.renderSlide;\n      var previousOffset = ref$1.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1);\n        slidesBefore = slidesPerGroup;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return a < b; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        swiper.virtual.update();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isEnd && !swiper.params.loop) { return; }\n          swiper.slideNext();\n        });\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isBeginning && !swiper.params.loop) { return; }\n          swiper.slidePrev();\n        });\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click');\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click');\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        swiper.zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        swiper.slideTo(swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index());\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar mobileBtn = document.querySelector('.js-mobile-menu');\nvar mobileMenu = document.querySelector('.js-navigation');\n\nif (!!mobileBtn && !!mobileMenu) {\n    var menuActive = true;\n\n    var onKeyDown = function onKeyDown(evt) {\n        evt = evt || window.event;\n        if (evt.keyCode == 27) {\n            closeMenu();\n        }\n    };\n\n    var onBodyClick = function onBodyClick(evt) {\n        evt = evt || window.event;\n        var targetHref = evt.target.getAttribute('href');\n        if (evt.target.classList.contains('menu__link') || /^#/.test(targetHref)) {\n            closeMenu();\n        }\n    };\n\n    var showMenu = function showMenu() {\n        mobileBtn.querySelector('.menu-btn').classList.add('open');\n        mobileMenu.classList.add('open');\n        document.body.classList.add('mobile-menu-opened');\n        document.addEventListener('keydown', onKeyDown);\n        document.addEventListener('click', onBodyClick);\n        menuActive = false;\n    };\n    var closeMenu = function closeMenu() {\n        mobileBtn.querySelector('.menu-btn').classList.remove('open');\n        mobileMenu.classList.remove('open');\n        document.body.classList.remove('mobile-menu-opened');\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('click', onBodyClick);\n        menuActive = true;\n    };\n\n    mobileBtn.onclick = function () {\n        console.log('123');\n        if (menuActive) {\n            showMenu();\n        } else {\n            closeMenu();\n        }\n    };\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\ndocument.querySelectorAll('.js-smooth-link').forEach(function (a) {\n    a.addEventListener('click', function (e) {\n        e.preventDefault();\n        var href = this.getAttribute(\"href\");\n        var elem = document.querySelector(href) || document.querySelector(\"a[name=\" + href.substring(1, href.length) + \"]\");\n        window.scroll({\n            top: elem.offsetTop,\n            left: 0,\n            behavior: 'smooth'\n        });\n    });\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/project.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 42b113fe4b7edab874b7","import \"../css/project.sass\";\n\nimport * as sliders from './partials/sliders.js';\nimport * as mobile_menu from './partials/mobile_menu.js';\nimport * as smoothScroll from './partials/smoothScroll.js';\n\n\n// WEBPACK FOOTER //\n// ./source/js/project.js","import Swiper from 'swiper/dist/js/swiper.js';\nlet firstSlider = new Swiper('.first-slider', {\n  init: false,\n  navigation: {\n    nextEl: '.first-slider__next',\n    prevEl: '.first-slider__prev',\n  },\n});\n\nlet secondSlider = new Swiper('.second-slider', {\n  pagination: {\n    el: '.second-slider-wrapper__pagination',\n    clickable: true\n  },\n  navigation: {\n    nextEl: '.first-section__arr-right',\n    prevEl: '.first-section__arr-left',\n  },\n});\n\nlet clientsSlider = new Swiper('.clients-slider', {\n  pagination: {\n    el: '.section-clients__slider-pagination',\n    clickable: true\n  },\n  slidesPerView: 3,\n  breakpoints: {\n    767: {\n      slidesPerView: 1,\n    }\n  }\n});\n\nlet worksSlider = new Swiper('.works-slider', {\n  pagination: {\n    el: '.section-how-it-works__pagination',\n    clickable: true\n  },\n  navigation: {\n    nextEl: '.works-slider-wrapper__next',\n    prevEl: '.works-slider-wrapper__prev',\n  },\n});\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/partials/sliders.js","/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.0.7\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: June 14, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    var this$1 = this;\n\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var this$1 = this;\n\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this$1[j] !== 'undefined' && typeof this$1[j].classList !== 'undefined') { this$1[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this$1[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this$1[i][attrName] = attrs[attrName];\n          this$1[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var this$1 = this;\n\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this$1[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    var this$1 = this;\n\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this$1[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this$1[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var this$1 = this;\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this$1[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var this$1 = this;\n\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this$1[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this$1[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    var this$1 = this;\n\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this$1[i], i, this$1[i]) === false) {\n        // End the loop early\n        return this$1;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    var this$1 = this;\n\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    var this$1 = this;\n\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this$1[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this$1[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this$1[i].appendChild(newChild[j]);\n          }\n        } else {\n          this$1[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var this$1 = this;\n\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);\n        }\n      } else {\n        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode !== null) {\n        if (selector) {\n          if ($(this$1[i].parentNode).is(selector)) { parents.push(this$1[i].parentNode); }\n        } else {\n          parents.push(this$1[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var this$1 = this;\n\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this$1[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var this$1 = this;\n\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this$1[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var this$1 = this;\n\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this$1[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    var this$1 = this;\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this$1[i].parentNode) { this$1[i].parentNode.removeChild(this$1[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n      if (preventDefault && swiper.allowTouchMove) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n      var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakPointsParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakPointsParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = (function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object') { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: false });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.virtual;\n      var previousFrom = ref$1.from;\n      var previousTo = ref$1.to;\n      var slides = ref$1.slides;\n      var previousSlidesGrid = ref$1.slidesGrid;\n      var renderSlide = ref$1.renderSlide;\n      var previousOffset = ref$1.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1);\n        slidesBefore = slidesPerGroup;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return a < b; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        swiper.virtual.update();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isEnd && !swiper.params.loop) { return; }\n          swiper.slideNext();\n        });\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', function (e) {\n          e.preventDefault();\n          if (swiper.isBeginning && !swiper.params.loop) { return; }\n          swiper.slidePrev();\n        });\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click');\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click');\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEvents = swiper.touchEvents;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        if (Support.touch) {\n          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        swiper.zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        swiper.slideTo(swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index());\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.js\n// module id = 3\n// module chunks = 0","const mobileBtn = document.querySelector('.js-mobile-menu');\nconst mobileMenu = document.querySelector('.js-navigation');\n\nif (!!mobileBtn && !!mobileMenu) {\n    let menuActive = true;\n\n    let onKeyDown = function (evt) {\n        evt = evt || window.event;\n        if (evt.keyCode == 27) {\n            closeMenu();\n        }\n    };\n    \n    let onBodyClick = function (evt) {\n        evt = evt || window.event;\n        let targetHref = evt.target.getAttribute('href');\n        if (evt.target.classList.contains('menu__link') || /^#/.test(targetHref)) {\n            closeMenu();\n        }\n    };\n    \n    let showMenu = function () {\n        mobileBtn.querySelector('.menu-btn').classList.add('open');\n        mobileMenu.classList.add('open');\n        document.body.classList.add('mobile-menu-opened');\n        document.addEventListener('keydown', onKeyDown);\n        document.addEventListener('click', onBodyClick);\n        menuActive = false;\n    }\n    let closeMenu = function () {\n        mobileBtn.querySelector('.menu-btn').classList.remove('open');\n        mobileMenu.classList.remove('open');\n        document.body.classList.remove('mobile-menu-opened');\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('click', onBodyClick);\n        menuActive = true;\n    }\n    \n    mobileBtn.onclick = function () {\n        console.log('123');\n        if (menuActive) {\n            showMenu();\n        } else {\n            closeMenu();\n        }\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./source/js/partials/mobile_menu.js","document.querySelectorAll('.js-smooth-link').forEach(a => {\n    a.addEventListener('click', function (e) {\n        e.preventDefault();\n        var href = this.getAttribute(\"href\");\n        var elem = document.querySelector(href)||document.querySelector(\"a[name=\"+href.substring(1, href.length)+\"]\");\n        window.scroll({\n            top: elem.offsetTop, \n            left: 0, \n            behavior: 'smooth' \n        });\n    });\n});\n\n\n// WEBPACK FOOTER //\n// ./source/js/partials/smoothScroll.js"],"sourceRoot":""}